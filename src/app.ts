import express, { Application, Request, Response, NextFunction } from 'express';
import session from 'express-session';
import passport from 'passport';
import dotenv from 'dotenv';
import path from 'path';
import { SenlerChannel } from 'passport-senler';

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
import { configurePassport } from './config/passport';
import indexRoutes from './routes/index';
import authRoutes from './routes/auth';

// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —Å–µ—Å—Å–∏–∏
declare module 'express-session' {
  interface SessionData {
    user?: SenlerChannel;
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const app: Application = express();
const PORT: number = Number(process.env.PORT) || 3000;

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON
app.use(express.json());

// –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.use(express.static(path.join(__dirname, '../public')));

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Å—Å–∏–π (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
app.use(session({
  secret: process.env.SESSION_SECRET || 'senler-dashboard-secret-key-' + Math.random().toString(36),
  resave: false,
  saveUninitialized: false,
  cookie: {
    secure: process.env.NODE_ENV === 'production',
    httpOnly: true,
    maxAge: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞
  }
}));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Passport
configurePassport(PORT);
app.use(passport.initialize());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤
app.use('/', indexRoutes);
app.use('/auth', authRoutes);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err: Error, _req: Request, res: Response, _next: NextFunction): void => {
  console.error('‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err.stack);
  res.status(500).json({
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
    message: process.env.NODE_ENV === 'development' ? err.message : '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫'
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use((_req: Request, res: Response): void => {
  res.status(404).json({
    error: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
    message: '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, (): void => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const missingEnvVars = [];
  if (!process.env.SENLER_CLIENT_ID) missingEnvVars.push('SENLER_CLIENT_ID');
  if (!process.env.SENLER_CLIENT_SECRET) missingEnvVars.push('SENLER_CLIENT_SECRET');
  
  if (missingEnvVars.length > 0) {
    console.warn('‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingEnvVars.join(', '));
  }
  

});

export default app; 